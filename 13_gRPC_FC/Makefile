# ==============================================================================
# Vari√°veis
# ==============================================================================
APP_NAME=grpc-server
VERSION?=latest
PORT?=50051

# Cores
BLUE=\033[0;34m
GREEN=\033[0;32m
RED=\033[0;31m
YELLOW=\033[0;33m
NC=\033[0m

# ==============================================================================
# Comandos de Desenvolvimento
# ==============================================================================
.PHONY: setup run init-db test-client clean

setup: ## Configura o ambiente
	@echo "$(BLUE)üîß Configurando ambiente...$(NC)"
	@go mod download
	@go install github.com/fullstorydev/grpcurl/cmd/grpcurl@latest

init-db: ## Inicializa o banco de dados
	@echo "$(BLUE)üóÑÔ∏è Criando tabelas...$(NC)"
	@go run cmd/initdb/main.go

run: init-db ## Roda o servidor gRPC
	@echo "$(BLUE)üöÄ Iniciando servidor gRPC na porta $(PORT)...$(NC)"
	@go run cmd/grpcServer/main.go

test-client: ## Testa o cliente gRPC
	@echo "$(BLUE)üß™ Testando cliente gRPC...$(NC)"
	@grpcurl -plaintext localhost:$(PORT) list

test-create: ## Testa cria√ß√£o de categoria
	@echo "$(BLUE)üß™ Testando cria√ß√£o de categoria...$(NC)"
	@grpcurl -plaintext -d '{"name": "Teste", "description": "Categoria de teste"}' localhost:$(PORT) pb.CategoryService.CreateCategory

test-list: ## Testa listagem de categorias
	@echo "$(BLUE)üß™ Testando listagem de categorias...$(NC)"
	@grpcurl -plaintext localhost:$(PORT) pb.CategoryService.ListCategories

test-get: ## Testa busca de categoria por ID
	@echo "$(BLUE)üß™ Testando busca de categoria por ID...$(NC)"
	@echo "Exemplo: grpcurl -plaintext -d '{\"id\": \"780c5d43-eccd-4267-a03b-3bc728db4c09\"}' localhost:$(PORT) pb.CategoryService.GetCategory"
	@echo "Substitua CATEGORY_ID pelo ID de uma categoria existente"

test-stream: ## Testa o streaming de categorias
	@echo "$(BLUE)üß™ Testando CreateCategoryStream...$(NC)"
	@go run cmd/testClient/main.go

test-services: ## Lista todos os servi√ßos dispon√≠veis
	@echo "$(BLUE)üîç Listando servi√ßos dispon√≠veis...$(NC)"
	@grpcurl -plaintext localhost:$(PORT) list

test-category-methods: ## Lista m√©todos do CategoryService
	@echo "$(BLUE)üîç Listando m√©todos do CategoryService...$(NC)"
	@grpcurl -plaintext localhost:$(PORT) list pb.CategoryService

evans: ## Abre o Evans para intera√ß√£o
	@echo "$(BLUE)üîß Abrindo Evans...$(NC)"
	@evans -r repl --host localhost --port $(PORT) --proto proto/course_category.proto

test-grpc: ## Testa o gRPC com grpcurl
	@echo "$(BLUE)üß™ Testando gRPC...$(NC)"
	@grpcurl -plaintext localhost:$(PORT) list

interactive-test: ## Teste interativo com grpcurl
	@echo "$(BLUE)üîß Modo interativo com grpcurl...$(NC)"
	@echo "Comandos √∫teis:"
	@echo "  grpcurl -plaintext localhost:$(PORT) list"
	@echo "  grpcurl -plaintext localhost:$(PORT) list pb.CategoryService"
	@echo "  grpcurl -plaintext localhost:$(PORT) pb.CategoryService.ListCategories"
	@echo "  grpcurl -plaintext -d '{\"name\": \"Teste\", \"description\": \"Teste\"}' localhost:$(PORT) pb.CategoryService.CreateCategory"
	@echo "  grpcurl -plaintext -d '{\"id\": \"CATEGORY_ID\"}' localhost:$(PORT) pb.CategoryService.GetCategory"
	@bash

clean: ## Limpa arquivos tempor√°rios
	@echo "$(BLUE)üßπ Limpando arquivos...$(NC)"
	@rm -f db.dbgrpc

# ==============================================================================
# Ajuda
# ==============================================================================
help: ## Mostra essa ajuda
	@echo "$(BLUE)Comandos dispon√≠veis:$(NC)"
	@grep -E '^[a-zA-Z_-]+:.*?## .*$$' $(MAKEFILE_LIST) | sort | awk 'BEGIN {FS = ":.*?## "}; {printf "  $(YELLOW)%-20s$(NC) %s\n", $$1, $$2}'

.DEFAULT_GOAL := help
