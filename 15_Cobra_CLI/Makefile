# ==============================================================================
# Vari√°veis
# ==============================================================================
APP_NAME=course-cli
VERSION?=latest
DB_PATH?=./database.db

# Cores
BLUE=\033[0;34m
GREEN=\033[0;32m
RED=\033[0;31m
YELLOW=\033[0;33m
NC=\033[0m

# ==============================================================================
# Comandos de Desenvolvimento
# ==============================================================================
.PHONY: setup run build test clean help

setup: ## Configura o ambiente
	@echo "$(BLUE)üîß Configurando ambiente...$(NC)"
	@go mod download
	@go mod tidy
	@go install github.com/spf13/cobra-cli@latest
	@echo "$(GREEN)‚úÖ Ambiente configurado!$(NC)"

build: ## Compila a aplica√ß√£o
	@echo "$(BLUE)üî® Compilando aplica√ß√£o...$(NC)"
	@go build -o $(APP_NAME) .
	@echo "$(GREEN)‚úÖ Aplica√ß√£o compilada como '$(APP_NAME)'!$(NC)"

run: ## Roda a aplica√ß√£o
	@echo "$(BLUE)üöÄ Executando aplica√ß√£o...$(NC)"
	@go run main.go

test: ## Roda os testes
	@echo "$(BLUE)üß™ Executando testes...$(NC)"
	@go test -v ./...

test-cmd: ## Roda apenas os testes de comandos
	@echo "$(BLUE)üß™ Executando testes de comandos...$(NC)"
	@go test -v ./cmd/...

test-coverage: ## Roda testes com cobertura
	@echo "$(BLUE)üß™ Executando testes com cobertura...$(NC)"
	@go test -v -cover ./...

test-race: ## Roda testes com detec√ß√£o de race conditions
	@echo "$(BLUE)üß™ Executando testes com detec√ß√£o de race conditions...$(NC)"
	@go test -v -race ./...

clean: ## Remove arquivos gerados
	@echo "$(BLUE)üßπ Limpando arquivos...$(NC)"
	@rm -f $(APP_NAME)
	@rm -f database.db
	@go clean
	@echo "$(GREEN)‚úÖ Limpeza conclu√≠da!$(NC)"

# ==============================================================================
# Comandos de Banco de Dados
# ==============================================================================
.PHONY: db-init db-reset

db-init: ## Inicializa o banco de dados
	@echo "$(BLUE)üóÑÔ∏è Inicializando banco de dados...$(NC)"
	@DB_PATH=$(DB_PATH) go run main.go category list
	@echo "$(GREEN)‚úÖ Banco de dados inicializado!$(NC)"

db-reset: ## Remove e recria o banco de dados
	@echo "$(BLUE)üóÑÔ∏è Resetando banco de dados...$(NC)"
	@rm -f $(DB_PATH)
	@$(MAKE) db-init
	@echo "$(GREEN)‚úÖ Banco de dados resetado!$(NC)"

# ==============================================================================
# Comandos de Exemplo
# ==============================================================================
.PHONY: demo-categories demo-ping demo-full

demo-categories: ## Demonstra comandos de categorias
	@echo "$(BLUE)üìö Demonstra√ß√£o - Categorias$(NC)"
	@echo "$(YELLOW)Criando categorias...$(NC)"
	@DB_PATH=$(DB_PATH) go run main.go category create "Programa√ß√£o" "Cursos de programa√ß√£o e desenvolvimento"
	@DB_PATH=$(DB_PATH) go run main.go category create "Design" "Cursos de design e UX/UI"
	@echo "$(YELLOW)Listando categorias...$(NC)"
	@DB_PATH=$(DB_PATH) go run main.go category list

demo-ping: ## Demonstra comando ping
	@echo "$(BLUE)üèì Demonstra√ß√£o - Ping$(NC)"
	@go run main.go ping

demo-full: ## Demonstra√ß√£o completa
	@echo "$(BLUE)üéØ Demonstra√ß√£o Completa$(NC)"
	@$(MAKE) demo-ping
	@echo ""
	@$(MAKE) demo-categories

# ==============================================================================
# Comandos de Desenvolvimento Avan√ßado
# ==============================================================================
.PHONY: dev-install dev-run dev-clean cobra-help

dev-install: ## Instala depend√™ncias de desenvolvimento
	@echo "$(BLUE)üì¶ Instalando depend√™ncias de desenvolvimento...$(NC)"
	@go install github.com/spf13/cobra-cli@latest
	@echo "$(GREEN)‚úÖ Depend√™ncias instaladas!$(NC)"

dev-run: build ## Roda a aplica√ß√£o compilada
	@echo "$(BLUE)üöÄ Executando aplica√ß√£o compilada...$(NC)"
	@./$(APP_NAME)

dev-clean: clean ## Limpeza completa incluindo depend√™ncias
	@echo "$(BLUE)üßπ Limpeza completa...$(NC)"
	@go clean -modcache
	@echo "$(GREEN)‚úÖ Limpeza completa conclu√≠da!$(NC)"

cobra-help: ## Mostra exemplos de uso do cobra-cli
	@echo "$(BLUE)üìö Exemplos de uso do cobra-cli:$(NC)"
	@echo ""
	@echo "$(YELLOW)Adicionar novo comando:$(NC)"
	@echo "  cobra-cli add <nome-do-comando>"
	@echo ""
	@echo "$(YELLOW)Exemplos:$(NC)"
	@echo "  cobra-cli add student     # Adiciona comando 'student'"
	@echo "  cobra-cli add teacher     # Adiciona comando 'teacher'"
	@echo "  cobra-cli add report      # Adiciona comando 'report'"
	@echo ""
	@echo "$(YELLOW)Ver ajuda completa:$(NC)"
	@echo "  cobra-cli --help"

# ==============================================================================
# Ajuda
# ==============================================================================
help: ## Mostra essa ajuda
	@echo "$(BLUE)Comandos dispon√≠veis:$(NC)"
	@grep -E '^[a-zA-Z_-]+:.*?## .*$$' $(MAKEFILE_LIST) | sort | awk 'BEGIN {FS = ":.*?## "}; {printf "  $(YELLOW)%-20s$(NC) %s\n", $$1, $$2}'

.DEFAULT_GOAL := help
