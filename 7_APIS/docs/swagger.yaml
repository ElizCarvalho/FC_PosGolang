basePath: /
definitions:
  dto.CreateUserInput:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        type: string
    type: object
  dto.Error:
    properties:
      message:
        type: string
    type: object
  dto.GetJWTOutput:
    properties:
      access_token:
        type: string
    type: object
  dto.LoginInput:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
host: localhost:8000
info:
  contact:
    email: elizabethcarvalh0@yahoo.com
    name: Elizabeth Carvalho
    url: https://github.com/ElizCarvalho
  description: API for FC Pos Golang
  license:
    name: MIT License
    url: https://github.com/ElizCarvalho/FC_PosGolang/blob/main/LICENSE
  termsOfService: http://swagger.io/terms/
  title: FC Pos Golang API Example
  version: "1.0"
paths:
  /users:
    post:
      consumes:
      - application/json
      description: Create user endpoint
      parameters:
      - description: user request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.CreateUserInput'
      produces:
      - application/json
      responses:
        "201":
          description: User created successfully
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.Error'
      summary: Create user
      tags:
      - users
  /users/generate_token:
    post:
      consumes:
      - application/json
      description: Get a user JWT endpoint
      parameters:
      - description: user credentials
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.LoginInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.GetJWTOutput'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/dto.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/dto.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.Error'
      summary: Get a user JWT
      tags:
      - users
securityDefinitions:
  ApiKeyAuth:
    description: JWT token
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
